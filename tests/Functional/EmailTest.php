<?php
namespace Librinfo\EmailBundle\tests\Functional;


/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-04 at 15:18:32.
 */

use PHPUnit\Framework\TestCase;
use Librinfo\EmailBundle\Entity\Email;

class EmailTest extends TestCase
{
    /**
     * @var Email
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Email;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::initCollections
     * @todo   Implement testInitCollections().
     */
    public function testInitCollections()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::__clone
     * @todo   Implement test__clone().
     */
    public function test__clone()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::__toString
     * @todo   Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setFieldFrom
     */
    public function testSetFieldFrom()
    {
        $email = new Email();
        $email->setFieldFrom('toi@moi.nous');
        $this->assertEquals('toi@moi.nous', $email->getFieldFrom());
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getFieldFrom
     */
    public function testGetFieldFrom()
    {
        $email = new Email();
        $from = $email->getFieldFrom();
        $this->assertEquals($from,'');
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setFieldTo
     */
    public function testSetFieldTo()
    {
        $email = new Email();
        $email->setFieldTo('moi@toi.nous');
        $this->assertEquals('moi@toi.nous', $email->getFieldTo());
     }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getFieldTo
     */
    public function testGetFieldTo()
    {
        $email = new Email();
        $to = $email->getFieldTo();
        $this->assertEquals($to,'');
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setFieldCc
     */
    public function testSetFieldCc()
    {
        $email = new Email();
        $email->setFieldCc('moi@lui.nous');
        $this->assertEquals('moi@lui.nous', $email->getFieldCc());
     }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getFieldCc
     */
    public function testGetFieldCc()
    {
        $email = new Email();
        $tocc = $email->getFieldCc();
        $this->assertEquals($tocc,'');
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setFieldBcc
     */
    public function testSetFieldBcc()
    {
        $email = new Email();
        $email->setFieldBcc('moi@autre.nous');
        $this->assertEquals('moi@autre.nous', $email->getFieldBcc());
     }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getFieldBcc
     */
    public function testGetFieldBcc()
    {
        $email = new Email();
        $tobcc = $email->getFieldBcc();
        $this->assertEquals($tobcc,'');
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setFieldSubject
     */
    public function testSetFieldSubject()
    {
        $email = new Email();
        $email->setFieldSubject("Sujet de l'email");
        $this->assertEquals("Sujet de l'email", $email->getFieldSubject());
     }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getFieldSubject
     */
    public function testGetFieldSubject()
    {
        $email = new Email();
        $subject = $email->getFieldSubject();
        $this->assertEquals($subject,'<no subject>');
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setContent
     * @todo   Implement testSetContent().
     */
    public function testSetContent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getContent
     * @todo   Implement testGetContent().
     */
    public function testGetContent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setTextContent
     * @todo   Implement testSetTextContent().
     */
    public function testSetTextContent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getTextContent
     * @todo   Implement testGetTextContent().
     */
    public function testGetTextContent()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setSent
     */
    public function testSetSent()
    {
        $email = new Email();
        $email->setSent(true);
        $this->assertEquals(true, $email->getSent());
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getSent
     * @todo   Implement testGetSent().
     */
    public function testGetSent()
    {
        $email = new Email();
        $sent = $email->getSent();
        $this->assertEquals($sent,false);
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::addAttachment
     * @todo   Implement testAddAttachment().
     */
    public function testAddAttachment()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::addLibrinfoFile
     * @todo   Implement testAddLibrinfoFile().
     */
    public function testAddLibrinfoFile()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::removeAttachment
     * @todo   Implement testRemoveAttachment().
     */
    public function testRemoveAttachment()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::removeLibrinfoFile
     * @todo   Implement testRemoveLibrinfoFile().
     */
    public function testRemoveLibrinfoFile()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getAttachments
     * @todo   Implement testGetAttachments().
     */
    public function testGetAttachments()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getLibrinfoFiles
     * @todo   Implement testGetLibrinfoFiles().
     */
    public function testGetLibrinfoFiles()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setAttachments
     * @todo   Implement testSetAttachments().
     */
    public function testSetAttachments()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getIsTest
     * @todo   Implement testGetIsTest().
     */
    public function testGetIsTest()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setIsTest
     * @todo   Implement testSetIsTest().
     */
    public function testSetIsTest()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getTestAddress
     * @todo   Implement testGetTestAddress().
     */
    public function testGetTestAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setTestAddress
     * @todo   Implement testSetTestAddress().
     */
    public function testSetTestAddress()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getTemplate
     * @todo   Implement testGetTemplate().
     */
    public function testGetTemplate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setTemplate
     * @todo   Implement testSetTemplate().
     */
    public function testSetTemplate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getIsTemplate
     * @todo   Implement testGetIsTemplate().
     */
    public function testGetIsTemplate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setIsTemplate
     * @todo   Implement testSetIsTemplate().
     */
    public function testSetIsTemplate()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getNewTemplateName
     * @todo   Implement testGetNewTemplateName().
     */
    public function testGetNewTemplateName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setNewTemplateName
     * @todo   Implement testSetNewTemplateName().
     */
    public function testSetNewTemplateName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setTracking
     * @todo   Implement testSetTracking().
     */
    public function testSetTracking()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getTracking
     * @todo   Implement testGetTracking().
     */
    public function testGetTracking()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::addReceipt
     * @todo   Implement testAddReceipt().
     */
    public function testAddReceipt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::removeReceipt
     * @todo   Implement testRemoveReceipt().
     */
    public function testRemoveReceipt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getReceipts
     * @todo   Implement testGetReceipts().
     */
    public function testGetReceipts()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::addLink
     * @todo   Implement testAddLink().
     */
    public function testAddLink()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::removeLink
     * @todo   Implement testRemoveLink().
     */
    public function testRemoveLink()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getLinks
     * @todo   Implement testGetLinks().
     */
    public function testGetLinks()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getId
     * @todo   Implement testGetId().
     */
    public function testGetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setId
     * @todo   Implement testSetId().
     */
    public function testSetId()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::isNew
     * @todo   Implement testIsNew().
     */
    public function testIsNew()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::addSearchIndex
     * @todo   Implement testAddSearchIndex().
     */
    public function testAddSearchIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::removeSearchIndex
     * @todo   Implement testRemoveSearchIndex().
     */
    public function testRemoveSearchIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getSearchIndexes
     * @todo   Implement testGetSearchIndexes().
     */
    public function testGetSearchIndexes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setSearchIndexes
     * @todo   Implement testSetSearchIndexes().
     */
    public function testSetSearchIndexes()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::analyseField
     * @todo   Implement testAnalyseField().
     */
    public function testAnalyseField()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getCreatedAt
     * @todo   Implement testGetCreatedAt().
     */
    public function testGetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setCreatedAt
     * @todo   Implement testSetCreatedAt().
     */
    public function testSetCreatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::getUpdatedAt
     * @todo   Implement testGetUpdatedAt().
     */
    public function testGetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Librinfo\EmailBundle\Entity\Email::setUpdatedAt
     * @todo   Implement testSetUpdatedAt().
     */
    public function testSetUpdatedAt()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
